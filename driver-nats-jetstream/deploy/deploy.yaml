#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#


- name: Install NATS cluster
  hosts: natsserver
  connection: ssh
  tasks:
  - name: Get seed NATS cluster node
    set_fact:
      natsClusterIp: "{{ hostvars[groups['natsserver'][0]].private_ip }}"
  - name: Install utility packages
    apt:
      pkg:
      - wget
      - unzip
      update_cache: yes
  - name: Remove existing server install (if present)
    file: path=/opt/nats state=absent
  - name: Create /opt/nats
    file: path=/opt/nats state=directory
  - name: Install NATS server from tarball
    unarchive:
      src: "https://github.com/nats-io/nats-server/releases/download/v2.6.6/nats-server-v2.6.6-linux-amd64.zip"
      remote_src: yes
      dest: /opt/nats
  - name: Provision NATS server configuration
    template:
      src: "templates/cluster.conf"
      dest: "/opt/nats/cluster.conf"
  - name: Provision systemd service configuration
    template:
      src: "templates/nats-server.service"
      dest: "/etc/systemd/system/nats-server.service"
  - name: Set seed NATS cluster node
    replace:
      dest: /opt/nats/cluster.conf
      regexp: 'natsClusterIp'
      replace: "{{ natsClusterIp }}"
  - name: Set the NATS server listen address
    replace:
      dest: /opt/nats/cluster.conf
      regexp: 'localhost'
      replace: "{{ ansible_facts['default_ipv4']['address'] }}"
  - name: Start the NATS server (systemd)
    systemd:
      state: started
      daemon_reload: yes
      name: "nats-server"


- name:  benchmarking client setup
  hosts: natsclient
  connection: ssh
  become: true
  tasks:
    - name: Set the seed NATS server
      set_fact:
        natsClusterIp: "{{ hostvars[groups['natsserver'][0]].private_ip }}"
    - name: Install java
      apt:
        name: openjdk-11-jre-headless
        state: latest
        install_recommends: no
        update_cache: yes
    - name: Copy benchmark tarball
      unarchive:
        src: ../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - name: Remove any existing benchmark directory
      ansible.builtin.file:
        path: /opt/benchmark
        state: absent
    - name: Install benchmark
      shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark
    - name: Provision worker list
      template:
        src: "templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"
    - name: Provision NATS worker configuration
      template:
        src: "templates/nats.yaml"
        dest: "/opt/benchmark/driver-nats-core/nats.yaml"
    - name: Set NATS seed URL
      lineinfile:
        dest: /opt/benchmark/driver-nats-core/nats.yaml
        regexp: '^natsHostUrl\: '
        line: "natsHostUrl: nats://{{ natsClusterIp }}:4222"
    - name: Configure JVM memory Benchmark Worker
      lineinfile:
        dest: /opt/benchmark/bin/benchmark-worker
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xms10G -Xmx10G -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking"'
    - name: Configure JVM memory Benchmark
      lineinfile:
        dest: /opt/benchmark/bin/benchmark
        regexp: '^JVM_MEM='
        line: 'JVM_MEM="-Xmx4G"'
    - name: Install benchmark systemd service
      template:
        src: "templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"
    - name: Start the benchmark worker (systemd)
      systemd:
        state: restarted
        daemon_reload: yes
        name: "benchmark-worker"


- name: List host addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "nats servers {{ item }}"
      with_items: "{{ groups['natsserver'] }}"
    - debug:
        msg: "Benchmark client {{ item }}"
      with_items: "{{ groups['natsclient'] }}"
  